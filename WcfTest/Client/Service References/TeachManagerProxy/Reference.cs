//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.TeachManagerProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Teacher", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class Teacher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClassIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClassId {
            get {
                return this.ClassIdField;
            }
            set {
                if ((this.ClassIdField.Equals(value) != true)) {
                    this.ClassIdField = value;
                    this.RaisePropertyChanged("ClassId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Class", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class Class : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TeachManagerProxy.ITeachManager")]
    public interface ITeachManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/GetTeachersByClassId", ReplyAction="http://tempuri.org/ITeachManager/GetTeachersByClassIdResponse")]
        Client.TeachManagerProxy.Teacher[] GetTeachersByClassId(System.Guid gidClassId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/GetTeachersByClassId", ReplyAction="http://tempuri.org/ITeachManager/GetTeachersByClassIdResponse")]
        System.Threading.Tasks.Task<Client.TeachManagerProxy.Teacher[]> GetTeachersByClassIdAsync(System.Guid gidClassId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/GetStudentsByClassId", ReplyAction="http://tempuri.org/ITeachManager/GetStudentsByClassIdResponse")]
        Client.TeachManagerProxy.Student[] GetStudentsByClassId(System.Guid gidClassId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/GetStudentsByClassId", ReplyAction="http://tempuri.org/ITeachManager/GetStudentsByClassIdResponse")]
        System.Threading.Tasks.Task<Client.TeachManagerProxy.Student[]> GetStudentsByClassIdAsync(System.Guid gidClassId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/GetAllClasses", ReplyAction="http://tempuri.org/ITeachManager/GetAllClassesResponse")]
        Client.TeachManagerProxy.Class[] GetAllClasses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/GetAllClasses", ReplyAction="http://tempuri.org/ITeachManager/GetAllClassesResponse")]
        System.Threading.Tasks.Task<Client.TeachManagerProxy.Class[]> GetAllClassesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/AddClass", ReplyAction="http://tempuri.org/ITeachManager/AddClassResponse")]
        bool AddClass(Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/AddClass", ReplyAction="http://tempuri.org/ITeachManager/AddClassResponse")]
        System.Threading.Tasks.Task<bool> AddClassAsync(Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/UpdateClass", ReplyAction="http://tempuri.org/ITeachManager/UpdateClassResponse")]
        bool UpdateClass(Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/UpdateClass", ReplyAction="http://tempuri.org/ITeachManager/UpdateClassResponse")]
        System.Threading.Tasks.Task<bool> UpdateClassAsync(Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/DeleteClass", ReplyAction="http://tempuri.org/ITeachManager/DeleteClassResponse")]
        bool DeleteClass(Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/DeleteClass", ReplyAction="http://tempuri.org/ITeachManager/DeleteClassResponse")]
        System.Threading.Tasks.Task<bool> DeleteClassAsync(Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/AddTeacher", ReplyAction="http://tempuri.org/ITeachManager/AddTeacherResponse")]
        bool AddTeacher(Client.TeachManagerProxy.Teacher objTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/AddTeacher", ReplyAction="http://tempuri.org/ITeachManager/AddTeacherResponse")]
        System.Threading.Tasks.Task<bool> AddTeacherAsync(Client.TeachManagerProxy.Teacher objTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/UpdateTeacher", ReplyAction="http://tempuri.org/ITeachManager/UpdateTeacherResponse")]
        bool UpdateTeacher(Client.TeachManagerProxy.Teacher objTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/UpdateTeacher", ReplyAction="http://tempuri.org/ITeachManager/UpdateTeacherResponse")]
        System.Threading.Tasks.Task<bool> UpdateTeacherAsync(Client.TeachManagerProxy.Teacher objTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/DeleteTeacher", ReplyAction="http://tempuri.org/ITeachManager/DeleteTeacherResponse")]
        bool DeleteTeacher(Client.TeachManagerProxy.Teacher objTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/DeleteTeacher", ReplyAction="http://tempuri.org/ITeachManager/DeleteTeacherResponse")]
        System.Threading.Tasks.Task<bool> DeleteTeacherAsync(Client.TeachManagerProxy.Teacher objTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/AddStudent", ReplyAction="http://tempuri.org/ITeachManager/AddStudentResponse")]
        bool AddStudent(Client.TeachManagerProxy.Student objStudent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/AddStudent", ReplyAction="http://tempuri.org/ITeachManager/AddStudentResponse")]
        System.Threading.Tasks.Task<bool> AddStudentAsync(Client.TeachManagerProxy.Student objStudent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/UpdateStudent", ReplyAction="http://tempuri.org/ITeachManager/UpdateStudentResponse")]
        bool UpdateStudent(Client.TeachManagerProxy.Student objStudent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/UpdateStudent", ReplyAction="http://tempuri.org/ITeachManager/UpdateStudentResponse")]
        System.Threading.Tasks.Task<bool> UpdateStudentAsync(Client.TeachManagerProxy.Student objStudent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/DeleteStudent", ReplyAction="http://tempuri.org/ITeachManager/DeleteStudentResponse")]
        bool DeleteStudent(Client.TeachManagerProxy.Student objStudent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/DeleteStudent", ReplyAction="http://tempuri.org/ITeachManager/DeleteStudentResponse")]
        System.Threading.Tasks.Task<bool> DeleteStudentAsync(Client.TeachManagerProxy.Student objStudent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/AddTeachRelation", ReplyAction="http://tempuri.org/ITeachManager/AddTeachRelationResponse")]
        bool AddTeachRelation(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/AddTeachRelation", ReplyAction="http://tempuri.org/ITeachManager/AddTeachRelationResponse")]
        System.Threading.Tasks.Task<bool> AddTeachRelationAsync(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/UpdateTeachRelation", ReplyAction="http://tempuri.org/ITeachManager/UpdateTeachRelationResponse")]
        bool UpdateTeachRelation(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/UpdateTeachRelation", ReplyAction="http://tempuri.org/ITeachManager/UpdateTeachRelationResponse")]
        System.Threading.Tasks.Task<bool> UpdateTeachRelationAsync(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/DeleteTeachRelation", ReplyAction="http://tempuri.org/ITeachManager/DeleteTeachRelationResponse")]
        bool DeleteTeachRelation(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachManager/DeleteTeachRelation", ReplyAction="http://tempuri.org/ITeachManager/DeleteTeachRelationResponse")]
        System.Threading.Tasks.Task<bool> DeleteTeachRelationAsync(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeachManagerChannel : Client.TeachManagerProxy.ITeachManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TeachManagerClient : System.ServiceModel.ClientBase<Client.TeachManagerProxy.ITeachManager>, Client.TeachManagerProxy.ITeachManager {
        
        public TeachManagerClient() {
        }
        
        public TeachManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TeachManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeachManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeachManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.TeachManagerProxy.Teacher[] GetTeachersByClassId(System.Guid gidClassId) {
            return base.Channel.GetTeachersByClassId(gidClassId);
        }
        
        public System.Threading.Tasks.Task<Client.TeachManagerProxy.Teacher[]> GetTeachersByClassIdAsync(System.Guid gidClassId) {
            return base.Channel.GetTeachersByClassIdAsync(gidClassId);
        }
        
        public Client.TeachManagerProxy.Student[] GetStudentsByClassId(System.Guid gidClassId) {
            return base.Channel.GetStudentsByClassId(gidClassId);
        }
        
        public System.Threading.Tasks.Task<Client.TeachManagerProxy.Student[]> GetStudentsByClassIdAsync(System.Guid gidClassId) {
            return base.Channel.GetStudentsByClassIdAsync(gidClassId);
        }
        
        public Client.TeachManagerProxy.Class[] GetAllClasses() {
            return base.Channel.GetAllClasses();
        }
        
        public System.Threading.Tasks.Task<Client.TeachManagerProxy.Class[]> GetAllClassesAsync() {
            return base.Channel.GetAllClassesAsync();
        }
        
        public bool AddClass(Client.TeachManagerProxy.Class objClass) {
            return base.Channel.AddClass(objClass);
        }
        
        public System.Threading.Tasks.Task<bool> AddClassAsync(Client.TeachManagerProxy.Class objClass) {
            return base.Channel.AddClassAsync(objClass);
        }
        
        public bool UpdateClass(Client.TeachManagerProxy.Class objClass) {
            return base.Channel.UpdateClass(objClass);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateClassAsync(Client.TeachManagerProxy.Class objClass) {
            return base.Channel.UpdateClassAsync(objClass);
        }
        
        public bool DeleteClass(Client.TeachManagerProxy.Class objClass) {
            return base.Channel.DeleteClass(objClass);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClassAsync(Client.TeachManagerProxy.Class objClass) {
            return base.Channel.DeleteClassAsync(objClass);
        }
        
        public bool AddTeacher(Client.TeachManagerProxy.Teacher objTeacher) {
            return base.Channel.AddTeacher(objTeacher);
        }
        
        public System.Threading.Tasks.Task<bool> AddTeacherAsync(Client.TeachManagerProxy.Teacher objTeacher) {
            return base.Channel.AddTeacherAsync(objTeacher);
        }
        
        public bool UpdateTeacher(Client.TeachManagerProxy.Teacher objTeacher) {
            return base.Channel.UpdateTeacher(objTeacher);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTeacherAsync(Client.TeachManagerProxy.Teacher objTeacher) {
            return base.Channel.UpdateTeacherAsync(objTeacher);
        }
        
        public bool DeleteTeacher(Client.TeachManagerProxy.Teacher objTeacher) {
            return base.Channel.DeleteTeacher(objTeacher);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTeacherAsync(Client.TeachManagerProxy.Teacher objTeacher) {
            return base.Channel.DeleteTeacherAsync(objTeacher);
        }
        
        public bool AddStudent(Client.TeachManagerProxy.Student objStudent) {
            return base.Channel.AddStudent(objStudent);
        }
        
        public System.Threading.Tasks.Task<bool> AddStudentAsync(Client.TeachManagerProxy.Student objStudent) {
            return base.Channel.AddStudentAsync(objStudent);
        }
        
        public bool UpdateStudent(Client.TeachManagerProxy.Student objStudent) {
            return base.Channel.UpdateStudent(objStudent);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStudentAsync(Client.TeachManagerProxy.Student objStudent) {
            return base.Channel.UpdateStudentAsync(objStudent);
        }
        
        public bool DeleteStudent(Client.TeachManagerProxy.Student objStudent) {
            return base.Channel.DeleteStudent(objStudent);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStudentAsync(Client.TeachManagerProxy.Student objStudent) {
            return base.Channel.DeleteStudentAsync(objStudent);
        }
        
        public bool AddTeachRelation(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass) {
            return base.Channel.AddTeachRelation(objTeacher, objClass);
        }
        
        public System.Threading.Tasks.Task<bool> AddTeachRelationAsync(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass) {
            return base.Channel.AddTeachRelationAsync(objTeacher, objClass);
        }
        
        public bool UpdateTeachRelation(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass) {
            return base.Channel.UpdateTeachRelation(objTeacher, objClass);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTeachRelationAsync(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass) {
            return base.Channel.UpdateTeachRelationAsync(objTeacher, objClass);
        }
        
        public bool DeleteTeachRelation(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass) {
            return base.Channel.DeleteTeachRelation(objTeacher, objClass);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTeachRelationAsync(Client.TeachManagerProxy.Teacher objTeacher, Client.TeachManagerProxy.Class objClass) {
            return base.Channel.DeleteTeachRelationAsync(objTeacher, objClass);
        }
    }
}
